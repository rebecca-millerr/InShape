{"ast":null,"code":"var _jsxFileName = \"/Users/Rebecca/Documents/soph/comp20/final/InShape/client/src/LogIn.js\";\nimport React, { Component } from 'react';\nimport './LogIn.css';\n\nconst passwordHash = require('password-hash');\n\nclass LogIn extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loggedIn: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.authenticate = this.authenticate.bind(this);\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async authenticate() {\n    const response = await fetch('/info/' + this.state.username);\n    console.log(response);\n    const json = await response.json(); // console.log(json)\n\n    let hashedPassword;\n\n    if (json.status === \"failed\") {\n      alert('No user with this username exists. Did you mean to sign up?');\n      return;\n    } else {\n      hashedPassword = json.password;\n      const matchingPasswords = passwordHash.verify(this.state.password, hashedPassword);\n\n      if (!matchingPasswords) {\n        alert('Invalid login credentials. Try again!');\n        return;\n      } else {\n        const status = await fetch('/log_in/' + this.state.username);\n        console.log(status);\n        this.setState({\n          loggedIn: true\n        });\n        this.props.validate();\n      }\n    } // json = { username : asdjknad, first_name = akajsnkaj ... }\n    // console.log(json.username)\n    // json is object with all info\n    // because /log_in/ only returns username\n    // /info would return everything\n    // clear state\n\n  }\n\n  render() {\n    if (this.state.loggedIn) {\n      return React.createElement(\"div\", {\n        className: \"LoginPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"LoginHeading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"All done!\"));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"LogInPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"LogInHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" Log In to get InShape!\"), React.createElement(\"form\", {\n      className: \"LoginFormBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      onChange: this.handleChange,\n      value: this.state.username,\n      className: \"LoginTextField\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: this.handleChange,\n      value: this.state.password,\n      className: \"LoginTextField\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.authenticate,\n      className: \"LoginSubmitButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Log In\")))));\n  }\n\n}\n\nexport default LogIn;","map":{"version":3,"sources":["/Users/Rebecca/Documents/soph/comp20/final/InShape/client/src/LogIn.js"],"names":["React","Component","passwordHash","require","LogIn","constructor","state","username","password","loggedIn","handleChange","bind","authenticate","event","target","name","value","setState","response","fetch","console","log","json","hashedPassword","status","alert","matchingPasswords","verify","props","validate","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport './LogIn.css';\nconst passwordHash = require('password-hash');\n\nclass LogIn extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username : \"\",\n            password : \"\",\n            loggedIn : false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.authenticate = this.authenticate.bind(this);\n    }\n\n    handleChange(event) {\n        const {name, value} = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    async authenticate() {\n        \n        const response = await fetch('/info/' + this.state.username);\n        console.log(response)\n        const json = await response.json();\n        // console.log(json)\n\n        let hashedPassword;\n\n        if ( json.status === \"failed\" ) {\n            alert('No user with this username exists. Did you mean to sign up?');\n            return;\n        }\n        else {\n            hashedPassword = json.password;\n            const matchingPasswords = passwordHash.verify(this.state.password, hashedPassword);\n\n            if ( !matchingPasswords ) {\n                alert('Invalid login credentials. Try again!');\n                return;\n            }\n            else {\n                const status = await fetch('/log_in/' + this.state.username);\n                console.log(status)\n\n                this.setState({\n                    loggedIn : true\n                });\n\n                this.props.validate();\n            }\n\n        }\n\n        \n        // json = { username : asdjknad, first_name = akajsnkaj ... }\n        // console.log(json.username)\n        // json is object with all info\n        // because /log_in/ only returns username\n        // /info would return everything\n\n        // clear state\n        \n    }\n\n    render() {\n        if ( this.state.loggedIn ) {\n            return(\n                <div className = \"LoginPage\">\n                    <h1 className = \"LoginHeading\">All done!</h1>\n                </div>\n            )\n        }\n\n        return(\n            <div className = \"LogInPage\">\n                <h1 className = \"LogInHeading\"> Log In to get InShape!</h1>\n                <form className = \"LoginFormBox\">                    \n                    <input \n                        type = \"text\"\n                        name = \"username\"\n                        placeholder = \"Username\"\n                        onChange = {this.handleChange}\n                        value = {this.state.username}\n                        className = \"LoginTextField\" \n                        required\n                    />\n                    <br />\n                    <input \n                        type = \"password\"\n                        name = \"password\"\n                        placeholder = \"Password\"\n                        onChange = {this.handleChange}\n                        value = {this.state.password}\n                        className = \"LoginTextField\" \n                        required\n                    />\n\n                    <div>\n                        <center><div onClick = {this.authenticate} className = \"LoginSubmitButton\">Log In</div></center>\n                    </div>  \n                </form>\n            </div>\n        )\n    }\n}\n\nexport default LogIn;"]},"metadata":{},"sourceType":"module"}