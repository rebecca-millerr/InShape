{"ast":null,"code":"var _jsxFileName = \"/Users/Rebecca/Documents/soph/comp20/final/InShape/client/src/Exercises.js\";\nimport React from 'react';\nimport './Exercises.css';\nimport ExerciseByMuscle from './ExerciseByMuscle';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckSquare } from '@fortawesome/free-solid-svg-icons';\n\nclass Exercises extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      abs: false,\n      arms: false,\n      back: false,\n      calves: false,\n      chest: false,\n      legs: false,\n      shoulders: false,\n      absData: null,\n      armsData: null,\n      backData: null,\n      calvesData: null,\n      chestData: null,\n      legsData: null,\n      shouldersData: null,\n      finished: false,\n      exercises: null,\n      triggered: false\n    };\n    this.fetchAbs = this.fetchAbs.bind(this);\n    this.fetchArms = this.fetchArms.bind(this);\n    this.fetchBack = this.fetchBack.bind(this);\n    this.fetchCalves = this.fetchCalves.bind(this);\n    this.fetchChest = this.fetchChest.bind(this);\n    this.fetchLegs = this.fetchLegs.bind(this);\n    this.fetchShoulders = this.fetchShoulders.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.findExercises = this.findExercises.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.fetchAbs();\n    await this.fetchArms();\n    await this.fetchBack();\n    await this.fetchCalves();\n    await this.fetchChest();\n    await this.fetchLegs();\n    await this.fetchShoulders();\n    this.setState({\n      finished: true\n    });\n  }\n\n  async fetchAbs() {\n    // abs\n    await fetch('https://wger.de/api/v2/exercise/?category=' + 10 + '&limit=204&language=2&status=2').then(response => response.json()).then(data => {\n      let rand1 = Math.floor(Math.random() * data.results.length);\n      let rand2 = rand1;\n\n      while (rand1 === rand2) {\n        rand2 = Math.floor(Math.random() * data.results.length);\n      }\n\n      ;\n      const tempData = {\n        muscle: 'Ab',\n        exercises: [{\n          name: data.results[rand1].name,\n          description: data.results[rand1].description\n        }, {\n          name: data.results[rand2].name,\n          description: data.results[rand2].description\n        }]\n      };\n      this.setState({\n        absData: tempData\n      });\n    });\n  }\n\n  async fetchArms() {\n    // arms\n    await fetch('https://wger.de/api/v2/exercise/?category=' + 8 + '&limit=204&language=2&status=2').then(response => response.json()).then(data => {\n      let rand1 = Math.floor(Math.random() * data.results.length);\n      let rand2 = rand1;\n\n      while (rand1 === rand2) {\n        rand2 = Math.floor(Math.random() * data.results.length);\n      }\n\n      ;\n      const tempData = {\n        muscle: 'Arm',\n        exercises: [{\n          name: data.results[rand1].name,\n          description: data.results[rand1].description\n        }, {\n          name: data.results[rand2].name,\n          description: data.results[rand2].description\n        }]\n      };\n      this.setState({\n        armsData: tempData\n      });\n    });\n  }\n\n  async fetchBack() {\n    // back\n    await fetch('https://wger.de/api/v2/exercise/?category=' + 12 + '&limit=204&language=2&status=2').then(response => response.json()).then(data => {\n      let rand1 = Math.floor(Math.random() * data.results.length);\n      let rand2 = rand1;\n\n      while (rand1 === rand2) {\n        rand2 = Math.floor(Math.random() * data.results.length);\n      }\n\n      ;\n      const tempData = {\n        muscle: 'Back',\n        exercises: [{\n          name: data.results[rand1].name,\n          description: data.results[rand1].description\n        }, {\n          name: data.results[rand2].name,\n          description: data.results[rand2].description\n        }]\n      };\n      this.setState({\n        backData: tempData\n      });\n    });\n  }\n\n  async fetchCalves() {\n    // calves\n    await fetch('https://wger.de/api/v2/exercise/?category=' + 14 + '&limit=204&language=2&status=2').then(response => response.json()).then(data => {\n      let rand1 = Math.floor(Math.random() * data.results.length);\n      let rand2 = rand1;\n\n      while (rand1 === rand2) {\n        rand2 = Math.floor(Math.random() * data.results.length);\n      }\n\n      ;\n      const tempData = {\n        muscle: 'Calf',\n        exercises: [{\n          name: data.results[rand1].name,\n          description: data.results[rand1].description\n        }, {\n          name: data.results[rand2].name,\n          description: data.results[rand2].description\n        }]\n      };\n      this.setState({\n        calvesData: tempData\n      });\n    });\n  }\n\n  async fetchChest() {\n    // chest\n    await fetch('https://wger.de/api/v2/exercise/?category=' + 11 + '&limit=204&language=2&status=2').then(response => response.json()).then(data => {\n      let rand1 = Math.floor(Math.random() * data.results.length);\n      let rand2 = rand1;\n\n      while (rand1 === rand2) {\n        rand2 = Math.floor(Math.random() * data.results.length);\n      }\n\n      ;\n      const tempData = {\n        muscle: 'Chest',\n        exercises: [{\n          name: data.results[rand1].name,\n          description: data.results[rand1].description\n        }, {\n          name: data.results[rand2].name,\n          description: data.results[rand2].description\n        }]\n      };\n      this.setState({\n        chestData: tempData\n      });\n    });\n  }\n\n  async fetchLegs() {\n    // legs\n    await fetch('https://wger.de/api/v2/exercise/?category=' + 9 + '&limit=204&language=2&status=2').then(response => response.json()).then(data => {\n      let rand1 = Math.floor(Math.random() * data.results.length);\n      let rand2 = rand1;\n\n      while (rand1 === rand2) {\n        rand2 = Math.floor(Math.random() * data.results.length);\n      }\n\n      ;\n      const tempData = {\n        muscle: 'Leg',\n        exercises: [{\n          name: data.results[rand1].name,\n          description: data.results[rand1].description\n        }, {\n          name: data.results[rand2].name,\n          description: data.results[rand2].description\n        }]\n      };\n      this.setState({\n        legsData: tempData\n      });\n    });\n  }\n\n  async fetchShoulders() {\n    // shoulders\n    await fetch('https://wger.de/api/v2/exercise/?category=' + 13 + '&limit=204&language=2&status=2').then(response => response.json()).then(data => {\n      let rand1 = Math.floor(Math.random() * data.results.length);\n      let rand2 = rand1;\n\n      while (rand1 === rand2) {\n        rand2 = Math.floor(Math.random() * data.results.length);\n      }\n\n      ;\n      const tempData = {\n        muscle: 'Shoulder',\n        exercises: [{\n          name: data.results[rand1].name,\n          description: data.results[rand1].description\n        }, {\n          name: data.results[rand2].name,\n          description: data.results[rand2].description\n        }]\n      };\n      this.setState({\n        shouldersData: tempData\n      });\n    });\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          checked = _event$target.checked;\n    this.setState({\n      [name]: checked\n    });\n  }\n\n  async findExercises() {\n    this.setState({\n      exercises: null\n    });\n    let exerciseSections = [];\n    this.setState({\n      triggered: true\n    });\n    await this.componentDidMount();\n\n    if (this.state.finished) {\n      if (this.state.abs) {\n        exerciseSections.push(React.createElement(ExerciseByMuscle, {\n          key: this.state.absData.muscle,\n          muscle: this.state.absData.muscle,\n          exercises: this.state.absData.exercises,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        }));\n      }\n\n      if (this.state.arms) {\n        exerciseSections.push(React.createElement(ExerciseByMuscle, {\n          key: this.state.armsData.muscle,\n          muscle: this.state.armsData.muscle,\n          exercises: this.state.armsData.exercises,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }));\n      }\n\n      if (this.state.back) {\n        exerciseSections.push(React.createElement(ExerciseByMuscle, {\n          key: this.state.backData.muscle,\n          muscle: this.state.backData.muscle,\n          exercises: this.state.backData.exercises,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }));\n      }\n\n      if (this.state.calves) {\n        exerciseSections.push(React.createElement(ExerciseByMuscle, {\n          key: this.state.calvesData.muscle,\n          muscle: this.state.calvesData.muscle,\n          exercises: this.state.calvesData.exercises,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }));\n      }\n\n      if (this.state.chest) {\n        exerciseSections.push(React.createElement(ExerciseByMuscle, {\n          key: this.state.chestData.muscle,\n          muscle: this.state.chestData.muscle,\n          exercises: this.state.chestData.exercises,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        }));\n      }\n\n      if (this.state.legs) {\n        exerciseSections.push(React.createElement(ExerciseByMuscle, {\n          key: this.state.legsData.muscle,\n          muscle: this.state.legsData.muscle,\n          exercises: this.state.legsData.exercises,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          },\n          __self: this\n        }));\n      }\n\n      if (this.state.shoulders) {\n        exerciseSections.push(React.createElement(ExerciseByMuscle, {\n          key: this.state.shouldersData.muscle,\n          muscle: this.state.shouldersData.muscle,\n          exercises: this.state.shouldersData.exercises,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }));\n      }\n    } else {\n      exerciseSections = null;\n    }\n\n    this.setState({\n      exercises: exerciseSections\n    });\n  }\n\n  render() {\n    let loading = 'Loading...';\n    let loadingStyle;\n\n    if (this.state.triggered && !this.state.finished && (this.state.abs || this.state.arms || this.state.back || this.state.calves || this.state.chest || this.state.legs || this.state.shoulders)) {\n      loadingStyle = {\n        display: 'block'\n      };\n    } else {\n      loadingStyle = {\n        display: 'none'\n      };\n    }\n\n    return React.createElement(\"div\", {\n      className: \"ExercisesPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"ExercisesHeading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"Select as many muscle groups as you'd like and we'll provide you with exercises!\"), React.createElement(\"form\", {\n      className: \"ExercisesFormBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"CheckboxBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"CheckboxOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"abs\",\n      checked: this.state.abs,\n      onChange: this.handleChange,\n      className: \"ExerciseCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"NoCheckCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }), React.createElement(FontAwesomeIcon, {\n      icon: faCheckSquare,\n      className: \"CheckedCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }), \"Abs\"), React.createElement(\"label\", {\n      className: \"CheckboxOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"arms\",\n      checked: this.state.arms,\n      onChange: this.handleChange,\n      className: \"ExerciseCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"NoCheckCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }), React.createElement(FontAwesomeIcon, {\n      icon: faCheckSquare,\n      className: \"CheckedCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }), \"Arms\"), React.createElement(\"label\", {\n      className: \"CheckboxOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"back\",\n      checked: this.state.back,\n      onChange: this.handleChange,\n      className: \"ExerciseCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"NoCheckCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }), React.createElement(FontAwesomeIcon, {\n      icon: faCheckSquare,\n      className: \"CheckedCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }), \"Back\"), React.createElement(\"label\", {\n      className: \"CheckboxOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"calves\",\n      checked: this.state.calves,\n      onChange: this.handleChange,\n      className: \"ExerciseCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"NoCheckCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }), React.createElement(FontAwesomeIcon, {\n      icon: faCheckSquare,\n      className: \"CheckedCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }), \"Calves\"), React.createElement(\"label\", {\n      className: \"CheckboxOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"chest\",\n      checked: this.state.chest,\n      onChange: this.handleChange,\n      className: \"ExerciseCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"NoCheckCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }), React.createElement(FontAwesomeIcon, {\n      icon: faCheckSquare,\n      className: \"CheckedCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }), \"Chest\"), React.createElement(\"label\", {\n      className: \"CheckboxOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"legs\",\n      checked: this.state.legs,\n      onChange: this.handleChange,\n      className: \"ExerciseCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"NoCheckCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }), React.createElement(FontAwesomeIcon, {\n      icon: faCheckSquare,\n      className: \"CheckedCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }), \"Legs\"), React.createElement(\"label\", {\n      className: \"CheckboxOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"shoulders\",\n      checked: this.state.shoulders,\n      onChange: this.handleChange,\n      className: \"ExerciseCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"NoCheckCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }), React.createElement(FontAwesomeIcon, {\n      icon: faCheckSquare,\n      className: \"CheckedCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }), \"Shoulders\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.findExercises,\n      className: \"ExercisesSubmitButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, \"Find Exercises!\"))), React.createElement(\"p\", {\n      className: \"Loading\",\n      style: loadingStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, loading), this.state.exercises);\n  }\n\n}\n\nexport default Exercises;","map":{"version":3,"sources":["/Users/Rebecca/Documents/soph/comp20/final/InShape/client/src/Exercises.js"],"names":["React","ExerciseByMuscle","FontAwesomeIcon","faCheckSquare","Exercises","Component","constructor","state","abs","arms","back","calves","chest","legs","shoulders","absData","armsData","backData","calvesData","chestData","legsData","shouldersData","finished","exercises","triggered","fetchAbs","bind","fetchArms","fetchBack","fetchCalves","fetchChest","fetchLegs","fetchShoulders","handleChange","findExercises","componentDidMount","setState","fetch","then","response","json","data","rand1","Math","floor","random","results","length","rand2","tempData","muscle","name","description","event","target","checked","exerciseSections","push","render","loading","loadingStyle","display"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './Exercises.css';\nimport ExerciseByMuscle from './ExerciseByMuscle';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckSquare } from '@fortawesome/free-solid-svg-icons';\n\nclass Exercises extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            abs       : false,\n            arms      : false,\n            back      : false,\n            calves    : false,\n            chest     : false,\n            legs      : false,\n            shoulders : false,\n\n            absData       : null,\n            armsData      : null,\n            backData      : null,\n            calvesData    : null,\n            chestData     : null,\n            legsData      : null,\n            shouldersData : null,\n\n            finished : false,\n\n            exercises : null,\n            triggered : false\n        }\n\n        this.fetchAbs = this.fetchAbs.bind(this);\n        this.fetchArms = this.fetchArms.bind(this);\n        this.fetchBack = this.fetchBack.bind(this);\n        this.fetchCalves = this.fetchCalves.bind(this);\n        this.fetchChest = this.fetchChest.bind(this);\n        this.fetchLegs = this.fetchLegs.bind(this);\n        this.fetchShoulders = this.fetchShoulders.bind(this);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.findExercises = this.findExercises.bind(this);\n    }\n\n    async componentDidMount() {\n\n        await this.fetchAbs();\n        await this.fetchArms();\n        await this.fetchBack();\n        await this.fetchCalves();\n        await this.fetchChest();\n        await this.fetchLegs();\n        await this.fetchShoulders();\n\n        this.setState({\n            finished : true\n        });\n    }\n\n    async fetchAbs() {\n        // abs\n        await fetch('https://wger.de/api/v2/exercise/?category=' + 10 \n              + '&limit=204&language=2&status=2')\n            .then(response => response.json())\n            .then(data => {\n                let rand1 = Math.floor(Math.random() * (data.results.length));\n                let rand2 = rand1;\n\n                while (rand1 === rand2){\n                    rand2 = Math.floor(Math.random() * (data.results.length));\n                };\n\n                const tempData = {\n                    muscle : 'Ab',\n                    exercises : [\n                        {\n                            name        : data.results[rand1].name,\n                            description : data.results[rand1].description\n                        },\n                        {\n                            name        : data.results[rand2].name,\n                            description : data.results[rand2].description\n                        }\n                    ]\n                }\n\n                this.setState({\n                  absData : tempData\n                });\n            });\n    }\n\n    async fetchArms() {\n        // arms\n        await fetch('https://wger.de/api/v2/exercise/?category=' + 8 \n              + '&limit=204&language=2&status=2')\n            .then(response => response.json())\n            .then(data => {\n                let rand1 = Math.floor(Math.random() * (data.results.length));\n                let rand2 = rand1;\n\n                while (rand1 === rand2){\n                    rand2 = Math.floor(Math.random() * (data.results.length));\n                };\n\n                const tempData = {\n                    muscle : 'Arm',\n                    exercises : [\n                        {\n                            name        : data.results[rand1].name,\n                            description : data.results[rand1].description\n                        },\n                        {\n                            name        : data.results[rand2].name,\n                            description : data.results[rand2].description\n                        }\n                    ]\n                }\n\n                this.setState({\n                  armsData : tempData\n                });\n            });\n    }\n\n    async fetchBack() {\n        // back\n        await fetch('https://wger.de/api/v2/exercise/?category=' + 12 \n              + '&limit=204&language=2&status=2')\n            .then(response => response.json())\n            .then(data => {\n                let rand1 = Math.floor(Math.random() * (data.results.length));\n                let rand2 = rand1;\n\n                while (rand1 === rand2){\n                    rand2 = Math.floor(Math.random() * (data.results.length));\n                };\n\n                const tempData = {\n                    muscle : 'Back',\n                    exercises : [\n                        {\n                            name        : data.results[rand1].name,\n                            description : data.results[rand1].description\n                        },\n                        {\n                            name        : data.results[rand2].name,\n                            description : data.results[rand2].description\n                        }\n                    ]\n                }\n\n                this.setState({\n                  backData : tempData\n                });\n            });\n    }\n\n    async fetchCalves() {\n        // calves\n        await fetch('https://wger.de/api/v2/exercise/?category=' + 14\n              + '&limit=204&language=2&status=2')\n            .then(response => response.json())\n            .then(data => {\n                let rand1 = Math.floor(Math.random() * (data.results.length));\n                let rand2 = rand1;\n\n                while (rand1 === rand2){\n                    rand2 = Math.floor(Math.random() * (data.results.length));\n                };\n\n                const tempData = {\n                    muscle : 'Calf',\n                    exercises : [\n                        {\n                            name        : data.results[rand1].name,\n                            description : data.results[rand1].description\n                        },\n                        {\n                            name        : data.results[rand2].name,\n                            description : data.results[rand2].description\n                        }\n                    ]\n                }\n\n                this.setState({\n                  calvesData : tempData\n                });\n            });\n    }\n\n    async fetchChest() {\n        // chest\n        await fetch('https://wger.de/api/v2/exercise/?category=' + 11\n              + '&limit=204&language=2&status=2')\n            .then(response => response.json())\n            .then(data => {\n                let rand1 = Math.floor(Math.random() * (data.results.length));\n                let rand2 = rand1;\n\n                while (rand1 === rand2){\n                    rand2 = Math.floor(Math.random() * (data.results.length));\n                };\n\n                const tempData = {\n                    muscle : 'Chest',\n                    exercises : [\n                        {\n                            name        : data.results[rand1].name,\n                            description : data.results[rand1].description\n                        },\n                        {\n                            name        : data.results[rand2].name,\n                            description : data.results[rand2].description\n                        }\n                    ]\n                }\n\n                this.setState({\n                  chestData : tempData\n                });\n            });\n    }\n\n    async fetchLegs() {\n        // legs\n        await fetch('https://wger.de/api/v2/exercise/?category=' + 9\n              + '&limit=204&language=2&status=2')\n            .then(response => response.json())\n            .then(data => {\n                let rand1 = Math.floor(Math.random() * (data.results.length));\n                let rand2 = rand1;\n\n                while (rand1 === rand2){\n                    rand2 = Math.floor(Math.random() * (data.results.length));\n                };\n\n                const tempData = {\n                    muscle : 'Leg',\n                    exercises : [\n                        {\n                            name        : data.results[rand1].name,\n                            description : data.results[rand1].description\n                        },\n                        {\n                            name        : data.results[rand2].name,\n                            description : data.results[rand2].description\n                        }\n                    ]\n                }\n\n                this.setState({\n                  legsData : tempData\n                });\n            });\n    }\n\n    async fetchShoulders() {\n        // shoulders\n        await fetch('https://wger.de/api/v2/exercise/?category=' + 13\n              + '&limit=204&language=2&status=2')\n            .then(response => response.json())\n            .then(data => {\n                let rand1 = Math.floor(Math.random() * (data.results.length));\n                let rand2 = rand1;\n\n                while (rand1 === rand2){\n                    rand2 = Math.floor(Math.random() * (data.results.length));\n                };\n\n                const tempData = {\n                    muscle : 'Shoulder',\n                    exercises : [\n                        {\n                            name        : data.results[rand1].name,\n                            description : data.results[rand1].description\n                        },\n                        {\n                            name        : data.results[rand2].name,\n                            description : data.results[rand2].description\n                        }\n                    ]\n                }\n\n                this.setState({\n                  shouldersData : tempData\n                });\n            });\n    }\n\n    handleChange(event) {\n        const {name, checked} = event.target;\n        this.setState({\n            [name] : checked\n        });\n    }\n\n    async findExercises() {\n\n        this.setState({\n            exercises : null\n        });\n\n        let exerciseSections = [];\n\n        this.setState({\n            triggered : true\n        });\n\n        await this.componentDidMount();\n\n        if ( this.state.finished ) {\n            if ( this.state.abs ) {\n                exerciseSections.push(\n                    <ExerciseByMuscle \n                        key       = {this.state.absData.muscle}\n                        muscle    = {this.state.absData.muscle}\n                        exercises = {this.state.absData.exercises}\n                    />);\n            }\n            if ( this.state.arms ) {\n                exerciseSections.push(\n                    <ExerciseByMuscle \n                        key       = {this.state.armsData.muscle}\n                        muscle    = {this.state.armsData.muscle}\n                        exercises = {this.state.armsData.exercises}\n                    />);\n            }\n            if ( this.state.back ) {\n                exerciseSections.push(\n                    <ExerciseByMuscle \n                        key       = {this.state.backData.muscle}\n                        muscle    = {this.state.backData.muscle}\n                        exercises = {this.state.backData.exercises}\n                    />);\n            }\n            if ( this.state.calves ) {\n                exerciseSections.push(\n                    <ExerciseByMuscle \n                        key       = {this.state.calvesData.muscle}\n                        muscle    = {this.state.calvesData.muscle}\n                        exercises = {this.state.calvesData.exercises}\n                    />);\n            }\n            if ( this.state.chest ) {\n                exerciseSections.push(\n                    <ExerciseByMuscle \n                        key       = {this.state.chestData.muscle}\n                        muscle    = {this.state.chestData.muscle}\n                        exercises = {this.state.chestData.exercises}\n                    />);\n            }\n            if ( this.state.legs ) {\n                exerciseSections.push(\n                    <ExerciseByMuscle \n                        key       = {this.state.legsData.muscle}\n                        muscle    = {this.state.legsData.muscle}\n                        exercises = {this.state.legsData.exercises}\n                    />);\n            }\n            if ( this.state.shoulders ) {\n                exerciseSections.push(\n                    <ExerciseByMuscle \n                        key       = {this.state.shouldersData.muscle}\n                        muscle    = {this.state.shouldersData.muscle}\n                        exercises = {this.state.shouldersData.exercises}\n                    />);\n            }\n        }\n        else {\n            exerciseSections = null;\n        }\n\n        this.setState({\n            exercises : exerciseSections\n        });\n    }\n\n    render() {\n\n        let loading = 'Loading...';\n\n        let loadingStyle;\n\n        if ( this.state.triggered && ! this.state.finished && ( this.state.abs || this.state.arms \n             || this.state.back || this.state.calves || this.state.chest \n             || this.state.legs || this.state.shoulders ) ) {\n            loadingStyle = { display : 'block' };\n        }\n        else {\n            loadingStyle = { display : 'none' };\n        }\n\n        return(\n            <div className = \"ExercisesPage\">\n                <h1 className = \"ExercisesHeading\">\n                    Select as many muscle groups as you'd like and we'll provide you with exercises!\n                </h1>\n                <form className = \"ExercisesFormBox\">\n                    <div className = \"CheckboxBox\">\n                        <label className = \"CheckboxOption\">\n                            <input\n                                type = \"checkbox\"\n                                name = \"abs\"\n                                checked = {this.state.abs}\n                                onChange = {this.handleChange}\n                                className = \"ExerciseCheckbox\"\n                            /> \n                            <div className = \"NoCheckCheckbox\"></div>\n                            <FontAwesomeIcon icon = {faCheckSquare} className = \"CheckedCheckbox\"/>\n                            Abs\n                        </label>\n                        <label className = \"CheckboxOption\">\n                            <input\n                                type = \"checkbox\"\n                                name = \"arms\"\n                                checked = {this.state.arms}\n                                onChange = {this.handleChange}\n                                className = \"ExerciseCheckbox\"\n                            /> \n                            <div className = \"NoCheckCheckbox\"></div>\n                            <FontAwesomeIcon icon = {faCheckSquare} className = \"CheckedCheckbox\"/>\n                            Arms\n                        </label>\n                        <label className = \"CheckboxOption\">\n                            <input\n                                type = \"checkbox\"\n                                name = \"back\"\n                                checked = {this.state.back}\n                                onChange = {this.handleChange}\n                                className = \"ExerciseCheckbox\"\n                            /> \n                            <div className = \"NoCheckCheckbox\"></div>\n                            <FontAwesomeIcon icon = {faCheckSquare} className = \"CheckedCheckbox\"/>\n                            Back\n                        </label>\n                        <label className = \"CheckboxOption\">\n                            <input\n                                type = \"checkbox\"\n                                name = \"calves\"\n                                checked = {this.state.calves}\n                                onChange = {this.handleChange}\n                                className = \"ExerciseCheckbox\"\n                            /> \n                            <div className = \"NoCheckCheckbox\"></div>\n                            <FontAwesomeIcon icon = {faCheckSquare} className = \"CheckedCheckbox\"/>\n                            Calves\n                        </label>\n                        <label className = \"CheckboxOption\">\n                            <input\n                                type = \"checkbox\"\n                                name = \"chest\"\n                                checked = {this.state.chest}\n                                onChange = {this.handleChange}\n                                className = \"ExerciseCheckbox\"\n                            /> \n                            <div className = \"NoCheckCheckbox\"></div>\n                            <FontAwesomeIcon icon = {faCheckSquare} className = \"CheckedCheckbox\"/>\n                            Chest\n                        </label>\n                        <label className = \"CheckboxOption\">\n                            <input\n                                type = \"checkbox\"\n                                name = \"legs\"\n                                checked = {this.state.legs}\n                                onChange = {this.handleChange}\n                                className = \"ExerciseCheckbox\"\n                            /> \n                            <div className = \"NoCheckCheckbox\"></div>\n                            <FontAwesomeIcon icon = {faCheckSquare} className = \"CheckedCheckbox\"/>\n                            Legs\n                        </label>\n                        <label className = \"CheckboxOption\">\n                            <input\n                                type = \"checkbox\"\n                                name = \"shoulders\"\n                                checked = {this.state.shoulders}\n                                onChange = {this.handleChange}\n                                className = \"ExerciseCheckbox\"\n                            /> \n                            <div className = \"NoCheckCheckbox\"></div>\n                            <FontAwesomeIcon icon = {faCheckSquare} className = \"CheckedCheckbox\"/>\n                            Shoulders\n                        </label>\n                    </div>\n                    <div>\n                        <div onClick = {this.findExercises} className = \"ExercisesSubmitButton\">Find Exercises!</div>\n                    </div>  \n                </form>\n                <p className = \"Loading\" style = {loadingStyle}>\n                    {loading}\n                </p>\n                {this.state.exercises}\n            </div>\n        )\n    }\n}\n\n\nexport default Exercises;"]},"metadata":{},"sourceType":"module"}