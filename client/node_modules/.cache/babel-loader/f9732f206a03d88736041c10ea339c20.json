{"ast":null,"code":"var _jsxFileName = \"/Users/Rebecca/Documents/soph/comp20/final/InShape/client/src/MealSection.js\";\nimport React from 'react';\nimport './MealSection.css';\nimport Ingredient from './Ingredient';\nimport Instruction from './Instruction';\n\nclass MealSection extends React.Component {\n  render() {\n    const ingredients = this.props.data.ingredients.map(ingredient => React.createElement(Ingredient, {\n      key: ingredient.name + ingredient.amount,\n      name: ingredient.name,\n      amount: ingredient.amount,\n      unit: ingredient.unit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }));\n    const noHTML = this.props.data.instructions.replace(/<[^>]*>?/gm, '');\n    const sentences = noHTML.split('.');\n    const instructions = sentences.map(sentence => React.createElement(Instruction, {\n      key: sentence,\n      text: sentence,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })); // const noHTML = words.filter((value, index, arr) => {\n    //     return value !== '<ol>' && value !== '</ol>' && value !== '<li>'\n    //            && value !== '</li>' && value !== ''\n    // })\n\n    return React.createElement(\"div\", {\n      className: \"MealSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"MealTopInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"MealImage\",\n      src: this.props.data.imageSource,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"MealTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.props.data.name), React.createElement(\"div\", {\n      className: \"MealText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"ShortLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Prep Time: \")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.data.prepTime, \" minutes\")), React.createElement(\"p\", {\n      className: \"ShortLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Servings: \")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.data.servings)), React.createElement(\"p\", {\n      className: \"ShortLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Calories: \")), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.data.calories)), React.createElement(\"p\", {\n      className: \"ShortLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Percent Carbs: \"), this.props.data.percentCarbs, \"%\"), React.createElement(\"p\", {\n      className: \"ShortLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Percent Fat: \"), this.props.data.percentFat, \"%\"), React.createElement(\"p\", {\n      className: \"ShortLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Percent Protein: \"), this.props.data.percentProtein, \"%\"))), React.createElement(\"div\", {\n      className: \"MealText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      className: \"DividerLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, ingredients), React.createElement(\"hr\", {\n      className: \"DividerLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, instructions)));\n  }\n\n}\n\nexport default MealSection;","map":{"version":3,"sources":["/Users/Rebecca/Documents/soph/comp20/final/InShape/client/src/MealSection.js"],"names":["React","Ingredient","Instruction","MealSection","Component","render","ingredients","props","data","map","ingredient","name","amount","unit","noHTML","instructions","replace","sentences","split","sentence","imageSource","prepTime","servings","calories","percentCarbs","percentFat","percentProtein"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './MealSection.css';\nimport Ingredient from './Ingredient';\nimport Instruction from './Instruction';\n\nclass MealSection extends React.Component {\n\n    render() {\n\n        const ingredients = this.props.data.ingredients.map(ingredient =>\n            <Ingredient\n                key = {ingredient.name + ingredient.amount}\n                name = {ingredient.name}\n                amount = {ingredient.amount}\n                unit = {ingredient.unit}\n            />);\n\n        const noHTML = this.props.data.instructions.replace(/<[^>]*>?/gm, '');\n        const sentences  = noHTML.split('.');\n\n        const instructions = sentences.map(sentence => \n            <Instruction\n                key = {sentence}\n                text = {sentence}\n            />)\n        // const noHTML = words.filter((value, index, arr) => {\n        //     return value !== '<ol>' && value !== '</ol>' && value !== '<li>'\n        //            && value !== '</li>' && value !== ''\n        // })\n\n        return(\n            <div className = \"MealSection\">\n                <div className = \"MealTopInfo\">\n                    <img className = \"MealImage\" src = {this.props.data.imageSource} />\n                    <h2 className = \"MealTitle\">{this.props.data.name}</h2>\n                    <div className = \"MealText\">\n                        <p className = \"ShortLine\"><span><b>Prep Time: </b></span><span>{this.props.data.prepTime} minutes</span></p>\n                        <p className = \"ShortLine\"><span><b>Servings: </b></span><span>{this.props.data.servings}</span></p>\n                        <p className = \"ShortLine\"><span><b>Calories: </b></span><span>{this.props.data.calories}</span></p>\n                        <p className = \"ShortLine\"><b>Percent Carbs: </b>{this.props.data.percentCarbs}%</p>\n                        <p className = \"ShortLine\"><b>Percent Fat: </b>{this.props.data.percentFat}%</p>\n                        <p className = \"ShortLine\"><b>Percent Protein: </b>{this.props.data.percentProtein}%</p>\n                    </div>\n                </div>\n                <div className = \"MealText\">\n                    <hr className = \"DividerLine\"/>\n                    <ul>{ingredients}</ul>\n                    <hr className = \"DividerLine\"/>\n                    <ol>{instructions}</ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MealSection;"]},"metadata":{},"sourceType":"module"}