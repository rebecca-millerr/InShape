{"ast":null,"code":"var _jsxFileName = \"/Users/Rebecca/Documents/soph/comp20/final/InShape/client/src/Meals.js\";\nimport React from 'react';\nimport MealSection from './MealSection';\nimport './Meals.css';\nimport MealSummary from './MealSummary';\n\nclass Meals extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      calories: null,\n      diet: null,\n      allergies: null,\n      data: null,\n      recipes: [],\n      food: []\n    };\n    this.getUserInfo = this.getUserInfo.bind(this);\n    this.fetchMeals = this.fetchMeals.bind(this);\n    this.fetchRecipes = this.fetchRecipes.bind(this);\n    this.makeFood = this.makeFood.bind(this);\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    await this.getUserInfo();\n    await this.fetchMeals(); // this.setState({\n    //   calories  : 1800,\n    //   diet      : 'none',\n    //   allergies : 'peanut',\n    // }, this.fetchMeals);\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  async getUserInfo() {\n    let allergies = new Array(5); // initialize allergies array\n\n    const response = await fetch('/info/' + this.props.username); // get data\n\n    console.log(response);\n    const json = await response.json(); // data to json\n\n    console.log(json);\n    allergies[0] = json.allergy1;\n    allergies[1] = json.allergy2;\n    allergies[2] = json.allergy3;\n    allergies[3] = json.allergy4;\n    allergies[4] = json.allergy5; // use for loops to go through the 5 things in the array (array.length) \n\n    for (let i = 0; i < allergies.length; i++) {\n      if (allergies[i] === null) {\n        allergies.splice(i);\n        break;\n      }\n    } // turn array into comma separated list\n\n\n    const allergyString = allergies.join(',');\n    console.log(allergyString);\n    this.setState({\n      allergies: allergyString\n    }); // get calories and make calories state\n\n    const calories = json.calories;\n    console.log(calories);\n    this.setState({\n      calories: calories\n    }); // get diet and account for 'none' and make diet state\n\n    let diet = json.diet;\n    console.log(diet);\n\n    if (diet === 'none') {\n      diet = '';\n    }\n\n    this.setState({\n      diet: diet\n    });\n  }\n\n  fetchMeals() {// let counter = 0;\n    // fetch(\"https://api.spoonacular.com/recipes/mealplans/generate?\" \n    //       + \"apiKey=048a26721a2a416a944e45becc2d10aa&timeFrame=day\"\n    //       + \"&targetCalories=\" + this.state.calories + \"&diet=\" + this.state.diet \n    //       + \"&exclude\" + this.state.allergies)\n    //   .then(response => response.json())\n    //   .then(data => {\n    //     this.setState({\n    //       data : data\n    //     });\n    //     counter++;\n    //     if ( counter === 1 ) {\n    //       this.fetchRecipes();\n    //     };\n    //   });\n  }\n\n  async fetchRecipes() {// let counter = 0;\n    // for ( let i = 0; i < 3; i++ ) {\n    //   await fetch(\"https://api.spoonacular.com/recipes/\" \n    //               + this.state.data.meals[i].id \n    //               + \"/information?apiKey=048a26721a2a416a944e45becc2d10aa\"\n    //               + \"&includeNutrition=true\")\n    //     .then(response => response.json())\n    //     .then(data => {\n    //       let tempRecipes = this.state.recipes.slice(0);\n    //       tempRecipes.push(data);\n    //       this.setState({\n    //         recipes : tempRecipes\n    //       });  \n    //       counter++;\n    //     });\n    //     if ( counter === 3 ) {\n    //       this.makeFood();\n    //     }\n    // }\n  }\n\n  makeFood() {// for ( let i = 0; i < 3; i++ ) {\n    //   let tempFood = this.state.food.slice(0);\n    //   const oneFood = {\n    //     id             : i + 1,\n    //     name           : this.state.data.meals[i].title,\n    //     prepTime       : this.state.data.meals[i].readyInMinutes,\n    //     percentCarbs   : this.state.recipes[i].nutrition.caloricBreakdown.percentCarbs,\n    //     percentFat     : this.state.recipes[i].nutrition.caloricBreakdown.percentFat,\n    //     percentProtein : this.state.recipes[i].nutrition.caloricBreakdown.percentProtein,\n    //     ingredients    : this.state.recipes[i].nutrition.ingredients,\n    //     instructions   : this.state.recipes[i].instructions\n    //   }\n    //   tempFood.push(oneFood);\n    //   this.setState({\n    //     food : tempFood\n    //   });\n    // }\n  }\n\n  render() {\n    // TODO: get rid of console logs\n    // TODO: sort out images\n    //var $image = $('<img>').attr(\"src\",\"https://spoonacular.com/recipeImages/\" + data.meals[i].id + \"-240x150.jpg\");\n    if (this.state.food.length !== 3) {\n      return React.createElement(\"div\", {\n        className: \"Meals\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"CallToAction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Come back tomorrow for more!\"), React.createElement(\"p\", {\n        className: \"Loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n\n    const totalCals = this.state.data.nutrients.calories;\n    const totalCarbs = this.state.data.nutrients.carbohydrates;\n    const totalFat = this.state.data.nutrients.fat;\n    const totalProtein = this.state.data.nutrients.protein;\n    const mealSections = this.state.food.map(food => React.createElement(MealSection, {\n      key: food.id,\n      data: food,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"Meals\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"CallToAction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Come back tomorrow for more!\"), React.createElement(MealSummary, {\n      cals: totalCals,\n      carbs: totalCarbs,\n      fat: totalFat,\n      protein: totalProtein,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), mealSections);\n  }\n\n}\n\nexport default Meals;","map":{"version":3,"sources":["/Users/Rebecca/Documents/soph/comp20/final/InShape/client/src/Meals.js"],"names":["React","MealSection","MealSummary","Meals","Component","constructor","state","loading","calories","diet","allergies","data","recipes","food","getUserInfo","bind","fetchMeals","fetchRecipes","makeFood","componentDidMount","setState","Array","response","fetch","props","username","console","log","json","allergy1","allergy2","allergy3","allergy4","allergy5","i","length","splice","allergyString","join","render","totalCals","nutrients","totalCarbs","carbohydrates","totalFat","fat","totalProtein","protein","mealSections","map","id"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport MealSection from './MealSection';\n\nimport './Meals.css';\nimport MealSummary from './MealSummary';\n\nclass Meals extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading   : false,\n\n      calories  : null,\n      diet      : null,\n      allergies : null,\n\n      data      : null,\n      recipes   : [],\n      food      : []\n    };\n\n    this.getUserInfo = this.getUserInfo.bind(this);\n\n    this.fetchMeals   = this.fetchMeals.bind(this);\n    this.fetchRecipes = this.fetchRecipes.bind(this);\n    this.makeFood     = this.makeFood.bind(this);\n  }\n\n  async componentDidMount() {\n\n    this.setState ({\n      loading : true\n    });\n\n    await this.getUserInfo();\n    await this.fetchMeals();\n\n    // this.setState({\n    //   calories  : 1800,\n    //   diet      : 'none',\n    //   allergies : 'peanut',\n    // }, this.fetchMeals);\n\n    this.setState({\n      loading : false\n    });\n  }\n\n  async getUserInfo() {\n    let allergies = new Array(5); // initialize allergies array\n\n    const response = await fetch('/info/' + this.props.username); // get data\n    console.log(response)\n    const json = await response.json() // data to json\n    console.log(json);\n\n    allergies[0] = json.allergy1;\n    allergies[1] = json.allergy2;\n    allergies[2] = json.allergy3;\n    allergies[3] = json.allergy4; \n    allergies[4] = json.allergy5;\n\n      // use for loops to go through the 5 things in the array (array.length) \n      for ( let i = 0; i < allergies.length; i++ ) { \n        if ( allergies[i] === null ) {\n          allergies.splice(i);\n          break;\n        }\n      }\n\n    // turn array into comma separated list\n    const allergyString = allergies.join(',');\n    console.log(allergyString)\n\n      this.setState({\n        allergies : allergyString\n      });\n\n    // get calories and make calories state\n    const calories = json.calories \n    console.log(calories)\n\n    this.setState({\n      calories : calories\n    });\n\n    // get diet and account for 'none' and make diet state\n    let diet = json.diet \n    console.log(diet)\n    if (diet === 'none') {\n      diet = '';\n    }\n\n    this.setState({\n      diet : diet\n    });\n  }\n\n  fetchMeals() {\n\n    // let counter = 0;\n    // fetch(\"https://api.spoonacular.com/recipes/mealplans/generate?\" \n    //       + \"apiKey=048a26721a2a416a944e45becc2d10aa&timeFrame=day\"\n    //       + \"&targetCalories=\" + this.state.calories + \"&diet=\" + this.state.diet \n    //       + \"&exclude\" + this.state.allergies)\n    //   .then(response => response.json())\n    //   .then(data => {\n    //     this.setState({\n    //       data : data\n    //     });\n    //     counter++;\n    //     if ( counter === 1 ) {\n    //       this.fetchRecipes();\n    //     };\n    //   });\n  }\n\n  async fetchRecipes() {\n\n    // let counter = 0;\n    // for ( let i = 0; i < 3; i++ ) {\n      \n    //   await fetch(\"https://api.spoonacular.com/recipes/\" \n    //               + this.state.data.meals[i].id \n    //               + \"/information?apiKey=048a26721a2a416a944e45becc2d10aa\"\n    //               + \"&includeNutrition=true\")\n    //     .then(response => response.json())\n    //     .then(data => {\n    //       let tempRecipes = this.state.recipes.slice(0);\n    //       tempRecipes.push(data);\n    //       this.setState({\n    //         recipes : tempRecipes\n    //       });  \n    //       counter++;\n    //     });\n\n    //     if ( counter === 3 ) {\n    //       this.makeFood();\n    //     }\n    // }\n  }\n\n  makeFood() {\n\n    // for ( let i = 0; i < 3; i++ ) {\n    //   let tempFood = this.state.food.slice(0);\n    //   const oneFood = {\n    //     id             : i + 1,\n    //     name           : this.state.data.meals[i].title,\n    //     prepTime       : this.state.data.meals[i].readyInMinutes,\n    //     percentCarbs   : this.state.recipes[i].nutrition.caloricBreakdown.percentCarbs,\n    //     percentFat     : this.state.recipes[i].nutrition.caloricBreakdown.percentFat,\n    //     percentProtein : this.state.recipes[i].nutrition.caloricBreakdown.percentProtein,\n    //     ingredients    : this.state.recipes[i].nutrition.ingredients,\n    //     instructions   : this.state.recipes[i].instructions\n    //   }\n\n    //   tempFood.push(oneFood);\n\n    //   this.setState({\n    //     food : tempFood\n    //   });\n    // }\n  }\n\n  render() {\n\n    // TODO: get rid of console logs\n    // TODO: sort out images\n\n    //var $image = $('<img>').attr(\"src\",\"https://spoonacular.com/recipeImages/\" + data.meals[i].id + \"-240x150.jpg\");\n\n    if ( this.state.food.length !== 3 ) {\n      return (\n        <div className = \"Meals\">\n          <p className = \"CallToAction\">\n            Come back tomorrow for more!\n          </p>\n          <p className = \"Loading\">\n            Loading...\n          </p>\n        </div>\n      )\n    }\n\n    const totalCals    = this.state.data.nutrients.calories;\n    const totalCarbs   = this.state.data.nutrients.carbohydrates;\n    const totalFat     = this.state.data.nutrients.fat;\n    const totalProtein = this.state.data.nutrients.protein;\n    \n\n    const mealSections = this.state.food.map(food => \n      <MealSection\n        key = {food.id}\n        data = {food}\n      />\n    );\n\n    return(\n      <div className = \"Meals\">\n        <p className = \"CallToAction\">\n          Come back tomorrow for more!\n        </p>\n        <MealSummary \n          cals    = {totalCals} \n          carbs   = {totalCarbs}\n          fat     = {totalFat}\n          protein = {totalProtein}\n        />\n        {mealSections}\n      </div>\n    )\n  }\n}\n\nexport default Meals;"]},"metadata":{},"sourceType":"module"}