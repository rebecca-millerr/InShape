{"ast":null,"code":"var _jsxFileName = \"/Users/Rebecca/Documents/soph/comp20/final/InShape/client/src/Meals.js\";\nimport React from 'react';\nimport MealSection from './MealSection';\nimport './Meals.css';\nimport MealSummary from './MealSummary';\n\nclass Meals extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      data: null,\n      recipes: [],\n      calories: null,\n      diet: null,\n      allergies: null,\n      food: []\n    };\n    this.fetchMeals = this.fetchMeals.bind(this);\n    this.fetchRecipes = this.fetchRecipes.bind(this);\n    this.makeFood = this.makeFood.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }); // TODO: make these state, update here\n    // API parameters\n\n    this.setState({\n      calories: 1800,\n      diet: 'none',\n      allergies: 'peanut'\n    }, this.fetchMeals); // TODO: get from database\n    // TODO: get from database\n    // TODO: get from database, array\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  fetchMeals() {// let counter = 0;\n    // fetch(\"https://api.spoonacular.com/recipes/mealplans/generate?\" \n    //       + \"apiKey=048a26721a2a416a944e45becc2d10aa&timeFrame=day\"\n    //       + \"&targetCalories=\" + this.state.calories + \"&diet=\" + this.state.diet \n    //       + \"&exclude\" + this.state.allergies)\n    //   .then(response => response.json())\n    //   .then(data => {\n    //     this.setState({\n    //       data : data\n    //     });\n    //     counter++;\n    //     if ( counter === 1 ) {\n    //       this.fetchRecipes();\n    //     };\n    //   });\n  }\n\n  async fetchRecipes() {// let counter = 0;\n    // for ( let i = 0; i < 3; i++ ) {\n    //   await fetch(\"https://api.spoonacular.com/recipes/\" \n    //               + this.state.data.meals[i].id \n    //               + \"/information?apiKey=048a26721a2a416a944e45becc2d10aa\"\n    //               + \"&includeNutrition=true\")\n    //     .then(response => response.json())\n    //     .then(data => {\n    //       let tempRecipes = this.state.recipes.slice(0);\n    //       tempRecipes.push(data);\n    //       this.setState({\n    //         recipes : tempRecipes\n    //       });  \n    //       counter++;\n    //     });\n    //     if ( counter === 3 ) {\n    //       this.makeFood();\n    //     }\n    // }\n  }\n\n  makeFood() {// for ( let i = 0; i < 3; i++ ) {\n    //   let tempFood = this.state.food.slice(0);\n    //   const oneFood = {\n    //     id             : i + 1,\n    //     name           : this.state.data.meals[i].title,\n    //     prepTime       : this.state.data.meals[i].readyInMinutes,\n    //     percentCarbs   : this.state.recipes[i].nutrition.caloricBreakdown.percentCarbs,\n    //     percentFat     : this.state.recipes[i].nutrition.caloricBreakdown.percentFat,\n    //     percentProtein : this.state.recipes[i].nutrition.caloricBreakdown.percentProtein,\n    //     ingredients    : this.state.recipes[i].nutrition.ingredients,\n    //     instructions   : this.state.recipes[i].instructions\n    //   }\n    //   tempFood.push(oneFood);\n    //   this.setState({\n    //     food : tempFood\n    //   });\n    // }\n  }\n\n  render() {\n    // TODO: get rid of console logs\n    // TODO: sort out images\n    //var $image = $('<img>').attr(\"src\",\"https://spoonacular.com/recipeImages/\" + data.meals[i].id + \"-240x150.jpg\");\n    if (this.state.food.length !== 3) {\n      return React.createElement(\"div\", {\n        className: \"Meals\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"CallToAction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Come back tomorrow for more!\"), React.createElement(\"p\", {\n        className: \"Loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n\n    const totalCals = this.state.data.nutrients.calories;\n    const totalCarbs = this.state.data.nutrients.carbohydrates;\n    const totalFat = this.state.data.nutrients.fat;\n    const totalProtein = this.state.data.nutrients.protein;\n    const mealSections = this.state.food.map(food => React.createElement(MealSection, {\n      key: food.id,\n      data: food,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"Meals\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"CallToAction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Come back tomorrow for more!\"), React.createElement(MealSummary, {\n      cals: totalCals,\n      carbs: totalCarbs,\n      fat: totalFat,\n      protein: totalProtein,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), mealSections);\n  }\n\n}\n\nexport default Meals;","map":{"version":3,"sources":["/Users/Rebecca/Documents/soph/comp20/final/InShape/client/src/Meals.js"],"names":["React","MealSection","MealSummary","Meals","Component","constructor","state","loading","data","recipes","calories","diet","allergies","food","fetchMeals","bind","fetchRecipes","makeFood","componentDidMount","setState","render","length","totalCals","nutrients","totalCarbs","carbohydrates","totalFat","fat","totalProtein","protein","mealSections","map","id"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport MealSection from './MealSection';\n\nimport './Meals.css';\nimport MealSummary from './MealSummary';\n\nclass Meals extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading   : false,\n      data      : null,\n      recipes   : [],\n      calories  : null,\n      diet      : null,\n      allergies : null,\n      food      : []\n    };\n\n    this.fetchMeals   = this.fetchMeals.bind(this);\n    this.fetchRecipes = this.fetchRecipes.bind(this);\n    this.makeFood     = this.makeFood.bind(this);\n  }\n\n  componentDidMount() {\n\n    this.setState ({\n      loading : true\n    });\n\n    // TODO: make these state, update here\n    // API parameters\n    this.setState({\n      calories  : 1800,\n      diet      : 'none',\n      allergies : 'peanut',\n    }, this.fetchMeals);\n    // TODO: get from database\n    // TODO: get from database\n    // TODO: get from database, array\n\n    this.setState({\n      loading : false\n    });\n  }\n\n  fetchMeals() {\n\n    // let counter = 0;\n    // fetch(\"https://api.spoonacular.com/recipes/mealplans/generate?\" \n    //       + \"apiKey=048a26721a2a416a944e45becc2d10aa&timeFrame=day\"\n    //       + \"&targetCalories=\" + this.state.calories + \"&diet=\" + this.state.diet \n    //       + \"&exclude\" + this.state.allergies)\n    //   .then(response => response.json())\n    //   .then(data => {\n    //     this.setState({\n    //       data : data\n    //     });\n    //     counter++;\n    //     if ( counter === 1 ) {\n    //       this.fetchRecipes();\n    //     };\n    //   });\n  }\n\n  async fetchRecipes() {\n\n    // let counter = 0;\n    // for ( let i = 0; i < 3; i++ ) {\n      \n    //   await fetch(\"https://api.spoonacular.com/recipes/\" \n    //               + this.state.data.meals[i].id \n    //               + \"/information?apiKey=048a26721a2a416a944e45becc2d10aa\"\n    //               + \"&includeNutrition=true\")\n    //     .then(response => response.json())\n    //     .then(data => {\n    //       let tempRecipes = this.state.recipes.slice(0);\n    //       tempRecipes.push(data);\n    //       this.setState({\n    //         recipes : tempRecipes\n    //       });  \n    //       counter++;\n    //     });\n\n    //     if ( counter === 3 ) {\n    //       this.makeFood();\n    //     }\n    // }\n  }\n\n  makeFood() {\n\n    // for ( let i = 0; i < 3; i++ ) {\n    //   let tempFood = this.state.food.slice(0);\n    //   const oneFood = {\n    //     id             : i + 1,\n    //     name           : this.state.data.meals[i].title,\n    //     prepTime       : this.state.data.meals[i].readyInMinutes,\n    //     percentCarbs   : this.state.recipes[i].nutrition.caloricBreakdown.percentCarbs,\n    //     percentFat     : this.state.recipes[i].nutrition.caloricBreakdown.percentFat,\n    //     percentProtein : this.state.recipes[i].nutrition.caloricBreakdown.percentProtein,\n    //     ingredients    : this.state.recipes[i].nutrition.ingredients,\n    //     instructions   : this.state.recipes[i].instructions\n    //   }\n\n    //   tempFood.push(oneFood);\n\n    //   this.setState({\n    //     food : tempFood\n    //   });\n    // }\n  }\n\n  render() {\n\n    // TODO: get rid of console logs\n    // TODO: sort out images\n\n    //var $image = $('<img>').attr(\"src\",\"https://spoonacular.com/recipeImages/\" + data.meals[i].id + \"-240x150.jpg\");\n\n    if ( this.state.food.length !== 3 ) {\n      return (\n        <div className = \"Meals\">\n          <p className = \"CallToAction\">\n            Come back tomorrow for more!\n          </p>\n          <p className = \"Loading\">\n            Loading...\n          </p>\n        </div>\n      )\n    }\n\n    const totalCals    = this.state.data.nutrients.calories;\n    const totalCarbs   = this.state.data.nutrients.carbohydrates;\n    const totalFat     = this.state.data.nutrients.fat;\n    const totalProtein = this.state.data.nutrients.protein;\n    \n\n    const mealSections = this.state.food.map(food => \n      <MealSection\n        key = {food.id}\n        data = {food}\n      />\n    );\n\n    return(\n      <div className = \"Meals\">\n        <p className = \"CallToAction\">\n          Come back tomorrow for more!\n        </p>\n        <MealSummary \n          cals    = {totalCals} \n          carbs   = {totalCarbs}\n          fat     = {totalFat}\n          protein = {totalProtein}\n        />\n        {mealSections}\n      </div>\n    )\n  }\n}\n\nexport default Meals;"]},"metadata":{},"sourceType":"module"}